{"ast":null,"code":"var _jsxFileName = \"/Users/armeenrashidian/Documents/testServer/app/src/App.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Initially, no file is selected\n      selectedFile: null,\n      totalScore: null,\n      educationScore: null,\n      educationComments: null,\n      experienceScore: null,\n      experienceComments: null,\n      formattingScore: null,\n      formattingComments: null,\n      name: null,\n      detail: null\n    };\n\n    this.onFileChange = event => {\n      // Update the state\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.onFileUpload = () => {\n      // Create an object of formData\n      const formData = new FormData(); // Update the formData object\n\n      formData.append(\"myFile\", this.state.selectedFile, this.state.selectedFile.name); // Details of the uploaded file\n\n      console.log(this.state.selectedFile); // Request made to the backend api\n      // Send formData object\n\n      axios.post(\"http://127.0.0.1:8000/wel\", formData).then(res => {\n        console.log(res.data.experienceComments);\n        this.setState({\n          totalScore: res.data.totalScore\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    this.fileData = () => {\n      if (this.state.totalScore) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"File Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Score: \", \" \", this.state.totalScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Choose before Pressing the Upload button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"GeeksforGeeks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"File Upload using React!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.onFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onFileUpload,\n          children: \"Upload!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), this.fileData()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/armeenrashidian/Documents/testServer/app/src/App.js"],"names":["axios","React","Component","App","state","selectedFile","totalScore","educationScore","educationComments","experienceScore","experienceComments","formattingScore","formattingComments","name","detail","onFileChange","event","setState","target","files","onFileUpload","formData","FormData","append","console","log","post","then","res","data","catch","error","fileData","render"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAExBE,KAFwB,GAEhB;AAEN;AACAC,MAAAA,YAAY,EAAE,IAHR;AAINC,MAAAA,UAAU,EAAE,IAJN;AAKRC,MAAAA,cAAc,EAAE,IALR;AAMNC,MAAAA,iBAAiB,EAAE,IANb;AAONC,MAAAA,eAAe,EAAE,IAPX;AAQNC,MAAAA,kBAAkB,EAAE,IARd;AASNC,MAAAA,eAAe,EAAE,IATX;AAUNC,MAAAA,kBAAkB,EAAE,IAVd;AAWNC,MAAAA,IAAI,EAAE,IAXA;AAYNC,MAAAA,MAAM,EAAE;AAZF,KAFgB;;AAAA,SAkBxBC,YAlBwB,GAkBTC,KAAK,IAAI;AAEtB;AACA,WAAKC,QAAL,CAAc;AAACZ,QAAAA,YAAY,EAAEW,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB;AAAf,OAAd;AAKD,KA1BuB;;AAAA,SA6BvBC,YA7BuB,GA6BR,MAAM;AAEpB;AACA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB,CAHoB,CAKpB;;AACAD,MAAAA,QAAQ,CAACE,MAAT,CACE,QADF,EAEE,KAAKnB,KAAL,CAAWC,YAFb,EAGE,KAAKD,KAAL,CAAWC,YAAX,CAAwBQ,IAH1B,EANoB,CAYpB;;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAL,CAAWC,YAAvB,EAboB,CAepB;AACA;;AACCL,MAAAA,KAAK,CAAC0B,IAAN,CAAW,2BAAX,EAAwCL,QAAxC,EACEM,IADF,CACOC,GAAG,IAAG;AACVJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACC,IAAJ,CAASnB,kBAArB;AACA,aAAKO,QAAL,CAAc;AAACX,UAAAA,UAAU,EAAEsB,GAAG,CAACC,IAAJ,CAASvB;AAAtB,SAAd;AACD,OAJF,EAKEwB,KALF,CAKQ,UAAUC,KAAV,EAAiB;AACtBP,QAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACD,OAPF;AAQC,KAtDoB;;AAAA,SA4DxBC,QA5DwB,GA4Db,MAAM;AAEf,UAAI,KAAK5B,KAAL,CAAWE,UAAf,EAA2B;AAEzB,4BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIV;AAAA,wCACoB,GADpB,EAEO,KAAKF,KAAL,CAAWE,UAFlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJU;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAYD,OAdD,MAcO;AACL,4BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD;AACF,KApFuB;AAAA;;AAsFxB2B,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAE,KAAKlB;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,OAAO,EAAE,KAAKK,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,EAaG,KAAKY,QAAL,EAbH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAzGuB;;AA4G1B,eAAe7B,GAAf","sourcesContent":["\nimport axios from 'axios';\n \nimport React,{Component} from 'react';\n \nclass App extends Component {\n  \n    state = {\n \n      // Initially, no file is selected\n      selectedFile: null,\n      totalScore: null,\n    educationScore: null,\n      educationComments: null,\n      experienceScore: null,\n      experienceComments: null,\n      formattingScore: null,\n      formattingComments: null,\n      name: null,\n      detail: null,\n    };\n    \n    // On file select (from the pop up)\n    onFileChange = event => {\n    \n      // Update the state\n      this.setState({selectedFile: event.target.files[0]\n      \t});\n      \n      \n    \n    };\n    \n    // On file upload (click the upload button)\n     onFileUpload = () => {\n    \n      // Create an object of formData\n      const formData = new FormData();\n    \n      // Update the formData object\n      formData.append(\n        \"myFile\",\n        this.state.selectedFile,\n        this.state.selectedFile.name\n      );\n    \n      // Details of the uploaded file\n      console.log(this.state.selectedFile);\n    \n      // Request made to the backend api\n      // Send formData object\n       axios.post(\"http://127.0.0.1:8000/wel\", formData)\n        .then(res=> {\n          console.log(res.data.experienceComments);\n          this.setState({totalScore: res.data.totalScore});\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n       };\n\t\t\n       \n    \n    // File content to be displayed after\n    // file upload is complete\n    fileData = () => {\n    \n      if (this.state.totalScore) {\n         \n        return (\n          <div>\n            <h2>File Details:</h2>\n             \n\n<p> \n\t\t\t   Total Score: {\" \"}\n\t\t\t   {this.state.totalScore} \n\t\t\t</p>\n \n          </div>\n        );\n      } else {\n        return (\n          <div>\n            <br />\n            <h4>Choose before Pressing the Upload button</h4>\n          </div>\n        );\n      }\n    };\n    \n    render() {\n    \n      return (\n        <div>\n            <h1>\n              GeeksforGeeks\n            </h1>\n            <h3>\n              File Upload using React!\n            </h3>\n            <div>\n                <input type=\"file\" onChange={this.onFileChange} />\n                <button onClick={this.onFileUpload}>\n                  Upload!\n                </button>\n            </div>\n          {this.fileData()}\n        </div>\n      );\n    }\n  }\n \n  export default App;\n"]},"metadata":{},"sourceType":"module"}